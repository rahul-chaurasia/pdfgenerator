package com.doubtnut.assignment.pdfgenerator;

import com.itextpdf.text.*;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;

import java.util.Date;
import java.util.List;
public class PDFCreator {
    private final static String[] HEADER_ARRAY = {"S.No.", "question"};
    public final static Font SMALL_BOLD = new Font(Font.FontFamily.TIMES_ROMAN, 8,
            Font.BOLD);
    public final static Font NORMAL_FONT = new Font(Font.FontFamily.TIMES_ROMAN, 8,
            Font.NORMAL);

    /*
    @author :Rahul Chaurasia
    @description : Add meta data for report genrated
    @params : document, sqlXMLFileName
    @return :None, Void Type
    */

    public static void addMetaData(Document document, String sqlXMLFileName) {
        document.addTitle("Question Report");
        document.addSubject("Using iText");
        document.addAuthor("Rahul Chaurasia");
    }

    /*
    @author :Rahul Chaurasia
    @description : Add content in genrated PDF
    @params : document, list data
    @return :None, Void Type
    */

    public static void addContent(Document document, List<DataObject> dataObjList) throws DocumentException {
        Paragraph paragraph = new Paragraph();
        paragraph.setFont(NORMAL_FONT);
        createReportTable(paragraph, dataObjList); // create reports here
        document.add(paragraph);
    }

    /*
    @author :Rahul Chaurasia
    @description : get User data
    @params : paragraph, dataObjList
    @return :None, Void Type
    */

    private static void createReportTable(Paragraph paragraph, List<DataObject> dataObjList)
    throws BadElementException {
        PdfPTable table = new PdfPTable(4);
        table.setWidthPercentage(100);
        paragraph.add(new Chunk("Questions Report Table :- ", SMALL_BOLD));

        if(dataObjList.size()==0){ // No data found case
            System.out.println("No data to display");
            paragraph.add(new Chunk("No data to display."));
            return;
        }
        addHeaderInTable(HEADER_ARRAY, table);
        int count = 1;
        addEmptyLine(paragraph,1);
        for(DataObject dataObject : dataObjList){
            paragraph.add(new Phrase("Question-"+count+" "+dataObject.getQuestion(), PDFCreator.NORMAL_FONT));
            count++;
            addEmptyLine(paragraph,count);
        }
        paragraph.add(table);
    }

    /*
     @author :Rahul Chaurasia
    @description : Set genral data for PDG generated
    @params : document, title
    @return :None, Void Type
    */
    public static void addTitlePage(Document document, String title) throws DocumentException {
        Paragraph preface = new Paragraph();
        addEmptyLine(preface, 3);
        preface.add(new Phrase("Question Report: ", NORMAL_FONT));
        preface.add(new Phrase(title, PDFCreator.NORMAL_FONT));
        addEmptyLine(preface, 1);
        preface.add(new Phrase("Date: ", PDFCreator.SMALL_BOLD));
        preface.add(new Phrase(new Date().toString(), PDFCreator.NORMAL_FONT));
        addEmptyLine(preface, 1);
        preface.add(new Phrase("Report generated by: ", PDFCreator.SMALL_BOLD));
        preface.add(new Phrase("Rahul Chaurasia", PDFCreator.NORMAL_FONT));
        addEmptyLine(preface, 2);
        preface.add(new Phrase("This is basically a Question report.", PDFCreator.NORMAL_FONT));
        document.addSubject("PDF : " + title);
        preface.setAlignment(Element.ALIGN_CENTER);
        document.add(preface);
    }

    public static void addEmptyLine(Paragraph paragraph, int number) {
        for (int i = 0; i < number; i++) {
            paragraph.add(new Paragraph(" "));
        }
    }

    public static void addHeaderInTable(String[] headerArray, PdfPTable table){
        PdfPCell c1 = null;
        for(String header : headerArray) {
            c1 = new PdfPCell(new Phrase(header, PDFCreator.SMALL_BOLD));
            c1.setBackgroundColor(BaseColor.GREEN);
            c1.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(c1);
        }
        table.setHeaderRows(1);
    }

    public static void addToTable(PdfPTable table, String data){
        table.addCell(new Phrase(data, PDFCreator.NORMAL_FONT));
    }

    public static Paragraph getParagraph(){
        Paragraph paragraph = new Paragraph();
        paragraph.setFont(PDFCreator.NORMAL_FONT);
        addEmptyLine(paragraph, 1);
        return paragraph;
    }
}